input {
  file {
	type => "eenrollog-0"
    path => "D:\basefarm\logs\input.log"
	start_position => "beginning"
	codec => multiline {
	  pattern => "^%{TIMESTAMP_ISO8601} "
	  negate => true
	  what => previous
	}
  }
  file {
	type => "eenrollog-1"
    path => "\\\\xx.xxx.xx.xx/d$/logs/*.log"
	start_position => "beginning"
	codec => multiline {
	  pattern => "^%{TIMESTAMP_ISO8601} "
	  negate => true
	  what => previous
	}
  }
  file {
	type => "eenrollog-2"
    path => "\\\\xx.xxx.xx.xx/d$/logs/*.log"
	start_position => "beginning"
	codec => multiline {
	  pattern => "^%{TIMESTAMP_ISO8601} "
	  negate => true
	  what => previous
	}
  }
}
filter {
	if [type] in ["eenrollog-0", "eenrollog-1", "eenrollog-2"] {
		if "_grokparsefailure" in [tags] {
		  drop { }
		}
		grok {
			patterns_dir => "D:\elk\logstash-2.2.0\patterns"
			match => { "message" => "(?m)%{EENROLLMENTLOG}"}
			overwrite => ["message"]
		}
		mutate {
			gsub => ["message", "\r", ""]
			gsub => ["message", "\n", ""]
			remove_field => ["message", "@version"]
		}
	}
}
output {
	if "_grokparsefailure" not in [tags] {
		elasticsearch {
			hosts => ["127.0.0.1:9200"]
			index => "logstash-%{+YYYY.MM.dd}"
		}
	}
	else {
		file{
			path => "D:\basefarm\logs\parsefailure.txt"
		}
	}
	stdout { codec => rubydebug }
}